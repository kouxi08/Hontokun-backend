openapi: 3.0.0
info:
  title: ホントくんAPI
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: ローカル開発環境
  - url: https://hontokun-backend.kouxi.jp
    description: 本番環境
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTを使用した認証を行います。`Authorization`ヘッダーに`Bearer`スキームでトークンを含めてください。
  schemas:
    UserId:
      type: object
      properties:
        id:
          type: string
          description: ユーザーID
    UserProfile:
      type: object
      properties:
        nickname:
          type: string
          description: ユーザー名
        birthday:
          type: string
          format: date
          description: ユーザーの誕生日(YYYY-MM-DD)
      required:
        - nickname
    UserStatus:
      type: object
      properties:
        level:
          type: integer
          description: ユーザーのレベル
        experience:
          type: integer
          description: ユーザーの経験値
    ImageId:
      type: object
      properties:
        id:
          type: string
          description: キャラクター画像のID
    ImageName:
      type: object
      properties:
        name:
          type: string
          description: キャラクター画像の名前
    ImageUrl:
      type: object
      properties:
        url:
          type: string
          description: キャラクター画像のURL
    Images:
      allOf:
        - $ref: '#/components/schemas/ImageId'
        - $ref: '#/components/schemas/ImageName'
        - $ref: '#/components/schemas/ImageUrl'
    CharacterDialogue:
      type: object
      properties:
        dialogue:
          type: string
          description: キャラクターのセリフ
    Accuracy:
      type: number
      format: double
      description: クイズセットの正答率
    QuizId:
      type: string
      description: クイズのID
    QuizSetId:
      type: string
      description: クイズセットのID
    Quiz:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/QuizId'
        news:
          type: object
          properties:
            title:
              type: string
              description: クイズのニュースのタイトル
            content:
              type: string
              description: クイズのニュースの内容
            image:
              type: string
              description: クイズのニュースの画像
        question:
          type: string
          description: クイズの問題文
        type:
          type: string
          enum:
            - 'TRUE_OR_FALSE'
            - 'SELECTION'
          description: クイズの問題タイプ（マルバツか選択式か）
        choices:
          type: array
          items:
            type: object
            properties:
              choiceId:
                type: number
              choice:
                type: string
          description: クイズの選択肢
          nullable: true
        correctAnswer:
          type: string
          description: クイズの正解
        hint:
          type: string
          description: クイズのヒント
        keyword:
          type: string
          description: クイズのキーワード
      required:
        - id
        - news
        - question
        - type
        - correctAnswer
    QuizAnswer:
      type: object
      properties:
        answerTime:
          type: integer
          nullable: true
          description: クイズを解いた時間(タイムアタックの場合・秒)
        isCorrect:
          type: boolean
          description: クイズの正誤
        userAnswer:
          type: string
          description: ユーザーの解答内容
        explanation:
          type: string
          description: クイズの解説
    QuizSet:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/QuizSetId'
        accuracy:
          $ref: '#/components/schemas/Accuracy'
          description: クイズセットの正答率
        mode:
          type: string
          description: クイズの出題形式
        answeredAt:
          type: string
          format: date-time
          description: クイズセットを解いた日時
    BadRequestError:
      type: object
      properties:
        message:
          type: string
          example: 'リクエスト内容が無効です。入力データを確認してください。'
          description: 入力データが不正である場合のエラーメッセージ
    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
          example: '認証に失敗しました。再度ログインしてください。'
          description: 認証が必要なエンドポイントに未認証のユーザがアクセスした場合のエラーメッセージ
    ForbiddenError:
      type: object
      properties:
        message:
          type: string
          example: 'アクセスが拒否されました。権限がありません。'
          description: ユーザがアクセス権限のないリソースにアクセスした場合のエラーメッセージ
    NotFoundError:
      type: object
      properties:
        message:
          type: string
          example: 'リソースが見つかりません。URLが正しいか確認してください。'
          description: リクエストされたリソースが見つからない場合のエラーメッセージ
    InternalServerError:
      type: object
      properties:
        message:
          type: string
          example: 'サーバーエラーが発生しました。しばらくしてから再度お試しください。'
          description: サーバー側で予期せぬエラーが発生した場合のエラーメッセージ
paths:
  /sign-up:
    post:
      tags:
        - auth
      summary: 新規登録
      description: ユーザーを新規登録する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: 登録成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserId'
                  - $ref: '#/components/schemas/UserProfile'
        '401':
          description: 登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: エラーメッセージ
  /main:
    get:
      tags:
        - main
      summary: メイン画面でのデータ取得
      description: ユーザのステータスや着せ替えを取得する
      parameters: []
      responses:
        '200':
          description: メイン画面データ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      - $ref: '#/components/schemas/UserId'
                      - $ref: '#/components/schemas/UserProfile'
                      - $ref: '#/components/schemas/UserStatus'
                  costume:
                    allOf:
                      - $ref: '#/components/schemas/Images'
                      - $ref: '#/components/schemas/CharacterDialogue'
              # example:
              #   user_id: "1"
              #   nickname: "ホントくん"
              #   birthday: "2020-01-01"
              #   level: 2
              #   experience: 4
              #   character_image_url: "https://example.com/image1.jpg"
              #   character_dialogue: |
              #     ようこそ！
              #     $USER_NAME  探偵事務所へ
              #     僕は助手のホントくん
              #     よろしくね！"
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: アクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /history:
    get:
      tags:
        - history
      summary: クイズ履歴トップ取得
      description: ユーザのクイズ履歴を取得する
      parameters: []
      responses:
        '200':
          description: クイズ履歴取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      - $ref: '#/components/schemas/UserId'
                      - $ref: '#/components/schemas/UserProfile'
                      - type: object
                        properties:
                          costume:
                            $ref: '#/components/schemas/Images'
                            description: ユーザの着せ替え画像
                    description: ユーザのステータス
                  history:
                    type: object
                    properties:
                      totalAccuracy:
                        $ref: '#/components/schemas/Accuracy'
                        description: ユーザの総正答率
                      tierList:
                        type: array
                        description: 難易度別の一覧
                        items:
                          type: object
                          properties:
                            tier:
                              type: integer
                              description: クイズセットの難易度
                            accuracy:
                              $ref: '#/components/schemas/Accuracy'
                              description: クイズセットの正答率
                            enemy:
                              $ref: '#/components/schemas/Images'
                              description: クイズセットの指名手配猫
                            quizSetList:
                              type: array
                              description: クイズセットの一覧
                              items:
                                $ref: '#/components/schemas/QuizSet'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: アクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      security:
        - bearerAuth: []
  /history/quiz-set/{quizSetId}:
    get:
      tags:
        - history
      summary: クイズ履歴詳細取得
      description: ユーザのクイズ履歴の詳細を取得する
      parameters:
        - name: quizSetId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/QuizSetId'
      responses:
        '200':
          description: クイズ履歴詳細取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  enemy:
                    $ref: '#/components/schemas/Images'
                    description: クイズセットの指名手配猫
                  quizSet:
                    $ref: '#/components/schemas/QuizSet'
                  quizList:
                    type: array
                    description: クイズの問題一覧
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Quiz'
                        - $ref: '#/components/schemas/QuizAnswer'
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: アクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      security:
        - bearerAuth: []
  /profile:
    get:
      tags:
        - profile
      summary: ユーザプロフィール取得
      description: ユーザのプロフィールを取得する
      parameters: []
      responses:
        '200':
          description: プロフィール取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    allOf:
                      - $ref: '#/components/schemas/UserId'
                      - $ref: '#/components/schemas/UserProfile'
                      # - type: object
                      #   properties:
                      #     character:
                      #       $ref: "#/components/schemas/CharacterImage"
                  costumeList:
                    type: array
                    description: キャラクター画像の一覧
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Images'
                        - type: object
                          properties:
                            # 持ってるかどうか
                            isOwn:
                              type: boolean
                              description: ユーザが所持しているかどうか
                            isSelected:
                              type: boolean
                              description: ユーザが選択しているかどうか
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: アクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - profile
      summary: ユーザプロフィール更新
      description: ユーザーのプロフィールを更新する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UserProfile'
                - type: object
                  properties:
                    costumeId:
                      $ref: '#/components/schemas/ImageId/properties/id'
      responses:
        '200':
          description: プロフィール更新成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserId'
                  - $ref: '#/components/schemas/UserProfile'
                  - type: object
                    properties:
                      costume:
                        $ref: '#/components/schemas/Images'
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: アクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      security:
        - bearerAuth: []
  /quiz/{tier}:
    get:
      tags:
        - quiz
      summary: クイズの問題取得
      description: クイズの問題を難易度別で取得する
      parameters:
        - name: tier
          in: path
          required: true
          schema:
            type: integer
          description: クイズの難易度
      responses:
        '200':
          description: クイズ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  enemy:
                    $ref: '#/components/schemas/Images'
                    description: クイズセットの指名手配猫
                  costume:
                    $ref: '#/components/schemas/Images'
                    description: ユーザの着せ替え画像
                  quizList:
                    type: array
                    description: クイズの問題一覧
                    items:
                      $ref: '#/components/schemas/Quiz'

        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: アクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /quiz/result:
    post:
      tags:
        - quiz
      summary: クイズの解答結果送信
      description: クイズの解答結果を送信する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quizMode:
                  type: string
                  description: バトルモード
                answers:
                  type: array
                  items:
                    type: object
                    properties:
                      quizId:
                        $ref: '#/components/schemas/QuizId'
                      answer:
                        type: string
                        description: ユーザーの解答
                      answerTime:
                        type: integer
                        nullable: true
                        description: クイズを解いた時間(タイムアタックの場合・秒)

      responses:
        '200':
          description: クイズ解答成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  quizSetId:
                    $ref: '#/components/schemas/QuizSetId'
                  accuracy:
                    $ref: '#/components/schemas/Accuracy'
                    description: クイズセットの正答率
                  quizList:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Quiz'
                        - $ref: '#/components/schemas/QuizAnswer'
                  enemy:
                    $ref: '#/components/schemas/Images'
                    description: クイズの敵キャラクター
                  costume:
                    $ref: '#/components/schemas/Images'
                    description: ユーザの着せ替え画像
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: アクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
