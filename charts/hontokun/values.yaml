# Default values for hontokun.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: kouxi00/hontokun-backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secretName: hontokun-backend-sercret

env:
  - name: MICROCMS_SERVICE_DOMAIN
    key: service_domain
  - name: MICROCMS_API_KEY
    key: api_key
  - name: DATABASE_URL
    key: database_url

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: hontokun-backend.kouxi.jp
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 300m
    memory: 1000Mi
  requests:
    cpu: 100m
    memory: 128Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  

livenessProbe:
  httpGet:
    path: /health-check
    port: 3000
readinessProbe:
  httpGet:
    path: /health-check
    port: 3000

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: firebase-volume
    secret:
      secretName: hontokun-secret

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: firebase-volume
    mountPath: /app/service-account-file.json
    subPath: service-account-file.json

nodeSelector: {}

tolerations: []

affinity: {}
